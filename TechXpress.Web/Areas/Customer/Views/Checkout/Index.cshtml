@model TechXpress.Services.DTOs.ViewModels.CheckoutViewModel
@{
    ViewData["Title"] = "Checkout";
}

<div class="container mt-4">
    <h2>Checkout</h2>

    <div class="row">
        <!-- Order Summary -->
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Order Summary</h5>
                </div>
                <div class="card-body">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Product ID</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.CartItems)
                            {
                                <tr>
                                    <td>@item.ProductId</td>
                                    <td>@item.Price.ToString("C")</td>
                                    <td>@item.Quantity</td>
                                    <td>@((item.Price * item.Quantity).ToString("C"))</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <th colspan="3" class="text-right">Total:</th>
                                <th>@Model.TotalAmount.ToString("C")</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>

        <!-- Payment Methods -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5>Payment Method</h5>
                </div>
                <div class="card-body">
                    <ul class="nav nav-tabs" id="paymentTabs" role="tablist">
                        @foreach (var gateway in Model.AvailablePaymentGateways)
                        {
                            <li class="nav-item" role="presentation">
                                <button class="nav-link @(gateway == "Stripe" ? "active" : "")"
                                        id="@gateway.ToLower()-tab"
                                        data-bs-toggle="tab"
                                        data-bs-target="#@gateway.ToLower()-pane"
                                        type="button"
                                        role="tab">
                                    @gateway
                                </button>
                            </li>
                        }
                    </ul>

                    <div class="tab-content mt-3" id="paymentTabContent">
                        @if (Model.AvailablePaymentGateways.Contains("Stripe"))
                        {
                            <div class="tab-pane fade show active" id="stripe-pane" role="tabpanel">
                                <p>Pay securely with your credit card.</p>
                                <form asp-action="ProcessPayment" asp-route-gatewayName="Stripe" method="post" id="stripe-form">
                                    <div id="card-element" class="form-control mb-3">
                                        <!-- Stripe Card Element will be inserted here -->
                                    </div>
                                    <div id="card-errors" class="text-danger mb-3"></div>
                                    <button type="submit" class="btn btn-primary w-100">Pay @Model.TotalAmount.ToString("C")</button>
                                </form>
                            </div>
                        }

                        @if (Model.AvailablePaymentGateways.Contains("PayPal"))
                        {
                            <div class="tab-pane fade" id="paypal-pane" role="tabpanel">
                                <p>Pay with your PayPal account.</p>
                                <form asp-action="ProcessPayment" asp-route-gatewayName="PayPal" method="post">
                                    <button type="submit" class="btn btn-primary w-100">
                                        <i class="fab fa-paypal me-2"></i> Pay with PayPal
                                    </button>
                                </form>
                                <!-- PayPal Smart Button will be rendered here -->
                                <div id="paypal-button-container" class="mt-3"></div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Include Font Awesome for payment method icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

    <!-- Stripe Scripts -->
    @if (Model.AvailablePaymentGateways.Contains("Stripe"))
    {
        <script src="https://js.stripe.com/v3/"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const stripe = Stripe('@Model.StripePublishableKey');
                const elements = stripe.elements();
                const cardElement = elements.create('card');

                cardElement.mount('#card-element');

                cardElement.on('change', function(event) {
                    const displayError = document.getElementById('card-errors');
                    if (event.error) {
                        displayError.textContent = event.error.message;
                    } else {
                        displayError.textContent = '';
                    }
                });

                const form = document.getElementById('stripe-form');
                form.addEventListener('submit', function(event) {
                    event.preventDefault();

                    stripe.createToken(cardElement).then(function(result) {
                        if (result.error) {
                            const errorElement = document.getElementById('card-errors');
                            errorElement.textContent = result.error.message;
                        } else {
                            stripeTokenHandler(result.token);
                        }
                    });
                });

                function stripeTokenHandler(token) {
                    const form = document.getElementById('stripe-form');
                    const hiddenInput = document.createElement('input');
                    hiddenInput.setAttribute('type', 'hidden');
                    hiddenInput.setAttribute('name', 'stripeToken');
                    hiddenInput.setAttribute('value', token.id);
                    form.appendChild(hiddenInput);

                    form.submit();
                }
            });
        </script>
    }

    <!-- PayPal Scripts -->
    @if (Model.AvailablePaymentGateways.Contains("PayPal"))
    {
        <script src="@(Model.PayPalSandbox ? "https://www.paypal.com/sdk/js?client-id=" + Model.PayPalClientId + "&currency=USD" : "https://www.paypal.com/sdk/js?client-id=" + Model.PayPalClientId + "&currency=USD")"></script>
        <script>
            paypal.Buttons({
                createOrder: function(data, actions) {
                    return fetch('/Checkout/CreatePayPalOrder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(function(res) {
                        return res.json();
                    })
                    .then(function(data) {
                        return data.orderId;
                    });
                },
                onApprove: function(data, actions) {
                    return fetch('/Checkout/CompletePayPalOrder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            orderId: data.orderID
                        })
                    })
                    .then(function(res) {
                        return res.json();
                    })
                    .then(function(data) {
                        window.location.href = data.redirectUrl;
                    });
                }
            }).render('#paypal-button-container');
        </script>
    }
}